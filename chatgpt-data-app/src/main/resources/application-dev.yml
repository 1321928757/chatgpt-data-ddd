server:
  port: 7070

# 应用配置
app:
  config:
    # 版本，方便通过接口版本升级
    api-version: v1
    # 跨域，开发阶段可以设置为 * 不限制
    cross-origin: '*'
    # 访问频次限制
    limit-count: 120
    # 访问频次的计时周期（分钟）
    limit-count-time: 60
    # 白名单，不做频次拦截【微信的openai】oxfA9w8-23yvwTmo2ombz0E4zJv4
    white-list: ojbZUv18lbmriaTjcCWBYkOrSbHA
    # 新注册用户的额度
    new-user-quota: 100
    # 新注册用户的可用模型(这里默认新注册用户全模型都可使用)
    new-user-model: gpt-3.5-turbo,gpt-3.5-turbo-16k,chatglm_lite,chatGLM_6b_SSE,chatglm_lite_32k,chatglm_std,chatglm_pro,chatglm_turbo

# 数据库配置；SpringBoot 默认连接池为 HikariDataSource
spring:
  datasource:
    username: root
    password: 123123
    url: jdbc:mysql://15123:3306/openai?useUnicode=true&characterEncoding=utf8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&serverTimezone=UTC&useSSL=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      pool-name: Retail_HikariCP
      minimum-idle: 15 #最小空闲连接数量
      idle-timeout: 180000 #空闲连接存活最大时间，默认600000（10分钟）
      maximum-pool-size: 25 #连接池最大连接数，默认是10
      auto-commit: true  #此属性控制从池返回的连接的默认自动提交行为,默认值：true
      max-lifetime: 1800000 #此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
      connection-timeout: 30000 #数据库连接超时时间,默认30秒，即30000
      connection-test-query: SELECT 1
    type: com.zaxxer.hikari.HikariDataSource
  # RabbitMQ 配置
  rabbitmq:
    addresses: 123123
    port: 5672
    username: admin
    password: 1232131
    listener:
      simple:
        prefetch: 1 # 每次投递n个消息，消费完在投递n个

mybatis:
  mapper-locations: classpath:/mybatis/mapper/*.xml
  config-location:  classpath:/mybatis/config/mybatis-config.xml

# Redisson客户端
redis:
  sdk:
    config:
      host: 123123
      port: 6379
      password: 123123
      pool-size: 10
      min-idle-size: 5
      idle-timeout: 30000
      connect-timeout: 5000
      retry-attempts: 3
      retry-interval: 1000
      ping-interval: 60000
      keep-alive: true

# 线程池配置
thread:
  pool:
    executor:
      config:
        core-pool-size: 20
        max-pool-size: 50
        keep-alive-time: 5000
        block-queue-size: 5000
        policy: CallerRunsPolicy

# ChatGPT SDK Config
chatgpt:
  sdk:
    config:
      # 状态；true = 开启、false 关闭
      enabled: true
      # 官网地址 https://api.openai.com/,国内代理地址 https://api.openai-proxy.com/
#      api-host: https://api.openai.com/
      api-host: https://chatapi.a3e.top/
      # 官网申请 https://platform.openai.com/account/api-keys
      api-key: sk-cRdJvyqAGsmO4cal582a4591090d49C6123123
      # 认证token，这个配置暂时没用到，假如自己搭建了gpt的代理转发地址，而不想让这代理网站公开使用，就可以加一层token校验，限制使用
      auth-token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ4ZmciLCJleHAiOjE2OTAwMzI5MDQsImlhdCI6MTY5MDAyOTMwNCwianRpIjoiOTBkNzc5NjYtOWM5MS00MGVmLWJmNjktNzYzNDljNmUyMDkyIiwidXNlcm5hbWUiOiJ4ZmcifQ.x7P6Rc249SgbxpqWhgKahYP8A8AllNI_26DV08a1AZs

# ChatGLM SDK Config
chatglm:
  sdk:
    config:
      # 状态；true = 开启、false 关闭
      enabled: true
      # 官网地址
      api-host: https://open.bigmodel.cn/
      # 官网申请 https://open.bigmodel.cn/usercenter/apikeys - 自己可申请
      api-secret-key: 8b3782333a21610fd6354bebc865bc40.123123

#支付宝支付配置（需要到支付宝沙盒控制台查看）
pay:
  alipay:
    # 支付宝沙盒环境appid
    app_id: 902100013123123
    # 支付宝沙盒环境应用密钥
    app_private_key: MIIEvQIBADANBgkq123123EFAASCBKcwggSjAgEAAoIBAQDw3jyqCp8TkAMDFl/bqj6IUsuVACwNx9jfLALQkKY06iGEUpVLmxsAIa7Ir7VC1HFpdfRgE4uezyFAmoebZAD7MDA4W4VLyfrY43IKpQN6rnB2N476nN8TLCfdLsgp2pl86YZbiBm4rDMl+BkIiT55TxRcE3Ykd5/ZhNUgD7gaPDmSti1dyZ7DHPu6wmk8tFZvjRG04gn+gPigfY+xC+fXtVYAuNxMTyFkrekutmE85inxDx1MwIkwSKl3PCRn1bF5MrtjtXXJxcyIWxEAjRbZsv/TlLkZR0nDhgWKaTkaA0vdFz7xtXteUdvqGyvA0WYpSXc2OUozv1gUnRpHoUYVAgMBAAECggEAf5O2XfoyN5JXhhMbwqVxaZMw8UKeEs5/N/V/qCh1YCGCjyuOl/UXYAJ3KSSnxTXwvAMV5K11ji/3VNiEavGU83aak78l4vagPrB5ftnX9ere9j6HJIZiQS1qD+Tvb/uwwFCQMXrs5LuQe9PkrnjC9k3EYuCL+tTBfdy1Zb3trTah2sA1P1+LOKGisDTcKpGUqBYhYrL+sbyXEIhA9WO3EabKrlwRsVItJ/bmOph0A2B9xXt1y6mx99xK+z9/AC8J24Ku9owtY0vbX+Vd3fZBcyeRCVjdWnzlS4eqIiuUAnI27sl7PaENYsjcLf4SHatBubkoDFZw0MILWGto3c6pIQKBgQD479o8Obv02kKNcUs+BiF442WX86y+nDL3G/D2clrtzgKpVQmQGAH7BtN/nwVf+xcdj+h66WFaR6I0H2DTNSapoxY+EWgeXNF1DnkaOqaOYXCyiCEFN6GF7vjVMnhCRhGk5H5EagkZBJ+LGIev/jmdi6sxnfEeAl69bQpxwxR1FwKBgQD3s8bhCXfYGuiB3H8K4rFQpMupPlB7q3/LuzAijgL0GSvyMYFlPUy/g6RhwyYhNOnigS2/xspJCMJJCanq9CiOGd5YM5lc+bf+p12z9fR2HEVWyXYhmKXxjU1eSnJ7ajq+Jo4qrisnBv3m7CscrxVW8gaSBJ3cfXdJ7LrT36YxswKBgGMPFvnGQ6wQulEMl1NsHx+65W+NEN2czI8WuFFpehONWfPGGhMT6p3YvorXXc0u3qjt3iYi/pFtVfeF0QLa8LKqaixywsrqRpNdGgW89xBLaAwzLWilFYp1aOF1vvMobNb/8dsJkus4ssAoF76J3KV7sbkBz7QQX2DjpjdU2KwrAoGAI59eHaTv8EtGXs6oEpexamiYxXkpt+9dDJ6Z+I41zIcGM+l8s2OScwRqkoivJh1m+WUcgDUFiGVTE4/pONnuLyl3OXYKOz3KgTvulN/tTUMZkbadX42FZ+yrUMEiH6+STSBcV7T+jblKsHgMZy6iwgNCgKNbVIdSrXX3FFtYmlMCgYEA796pLzYwnwiM13ejNMqS0HwuBqP1ZshlvdOt/Qxy6YVKhyPzHgDs5zPwNq045gkdxJBKeXHxqcvOpCuXJb4FIFS/OVWupuUiU+a/MIqEE9XEsMhZ7XyEt46TAstnrf4gMK+n1ELRm7tjMCzUHlrISbo+w72rwizKsv09JHqXc7Y=
    # 支付宝公钥
    alipay_public_key: MIIBIjANBgkq123123AOCAQ8AMIIBCgKCAQEAmRQHhyiF6i/7NDjy1J11+NIPdjIXDQqHuWeA1Q+kKp/GH6IgxfMTICF9C94hagvIF51GG3r+Iji9Xv0DmEBKgCIdn9YnmczIxL2SMZoJdqIoQufh5Ai/z2uzLln64SNtxIaliYNNPg0R1gmzQVL4jL7/ksAoH+ZUaIBs7p1gVCJdZFfO9anx3Obggw8z8yMH4dFN6exXhOLbfnLQj9TeoDaGYs0GQMmtlo2DcBpH1lA92ORw87yYmpiqld0qiCEUqEk0UkbcKSy665NJHPX7pa9pkTFLkWW0w4pYyBj+6W0hXnrK+Gwe5QFGGfUsG9VgQfMUIe7zOI7VU+Pfn4sh5QIDAQAB
    # 支付宝网关地址
    url: https://openapi-sandbox.dl.alipaydev.com/gateway.do
    # 二维码的跳转地址，这里指向我们的支付接口
    qrcode_url: http://www.luckysj.site/api/v1/sale/requestpay?payNo=%s
    # 支付宝支付结果通知地址,luckysj.natapp1.cc为内网穿透地址
    notify_url: http://www.luckysj.site/api/v1/sale/paynotify

# 微信公众号配置信息
# originalid：原始ID
# appid：个人AppID
# token：开通接口服务自定义设置
wx:
  config:
    originalid: gh_123123
    appid: wxc7123123
    token: b123123

# 监控
management:
  endpoints:
    web:
      exposure:
        include: "*" # 暴露所有端点，包括自定义端点
  endpoint:
    metrics:
      enabled: true
    health:
      show-details: always # 显示详细的健康检查信息
    prometheus:
      enabled: true # 启用Prometheus端点
  metrics:
    export:
      prometheus:
        enabled: true # 启用Prometheus
      jmx:
        enabled: true # 启用JMX监控

# 日志
logging:
  level:
    root: info
  config: classpath:logback-spring.xml